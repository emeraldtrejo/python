def group_list(group, users):
  members = ", ".join(users)
  return group + ":" +  members

print(group_list("Marketing", ["Mike", "Karen", "Jake", "Tasha"])) # Should be "Marketing: Mike, Karen, Jake, Tasha"
print(group_list("Engineering", ["Kim", "Jay", "Tom"])) # Should be "Engineering: Kim, Jay, Tom"
print(group_list("Users", "")) # Should be "Users:"

# use .append() to insert at the end
fruits.append("Kiwi")

# insert to specify the location
fruits.insert(0, "Orange")

#remove
fruits.remove("Melon")

#pop removes the element at the index that was passed
fruits.pop(3)

#assignment
fruits[2] = "Strawberries"

# return every other element, using a type of slice [begging:end:howoften]
def skip_elements(elements):
	return elements[::2]

print(skip_elements(["a", "b", "c", "d", "e", "f", "g"])) # Should be ['a', 'c', 'e', 'g']
print(skip_elements(['Orange', 'Pineapple', 'Strawberry', 'Kiwi', 'Peach'])) # Should be ['Orange', 'Strawberry', 'Peach']
print(skip_elements([])) # Should be []


def full_emails(people):
	result = []
	for email, name in people:
		result.append("{} <{}>".format(name,email))
	return result
	
print(full_emails([("alex@example.com", "Alex Diego")

multiples = []
for x in range(1,11):
	mulitples.append(x*7)
print(mulitples)

#same way to do it but more simplier
mulitples = [x*7 for x in range(1,11)] 

z = [x for x in range(0,101) if x % 3 ==0]
print(z)


def skip_elements(elements):
	return [x for x in elements if (elements.index(x) % 2 == 0)]  

print(skip_elements(["a", "b", "c", "d", "e", "f", "g"])) # Should be ['a', 'c', 'e', 'g']
print(skip_elements(['Orange', 'Pineapple', 'Strawberry', 'Kiwi', 'Peach'])) # Should be ['Orange', 'Strawberry', 'Peach']

#list comprehension
[ x*2 for x in range(1,11) ] i
